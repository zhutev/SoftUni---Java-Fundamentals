package ListsExercise;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class P09PokemonDontGo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<Integer> numbersList = Arrays.stream(scanner.nextLine().split("\\s+"))
                .map(Integer::parseInt)
                .collect(Collectors.toList());

        int sumRemoved = 0;

        while (numbersList.size() > 0)  {
            int index = Integer.parseInt(scanner.nextLine());

            if (index >= 0 && index <= numbersList.size() - 1) {
                int removedElement = numbersList.get(index);

                sumRemoved += removedElement;
                numbersList.remove(index);

                modifyListNumbers(numbersList, removedElement);
                
            } else if (index < 0) {
                int copyFirstElement = numbersList.get(0);
                sumRemoved += copyFirstElement;
                numbersList.remove(0);

                int lastElement = numbersList.get(numbersList.size() - 1);
                numbersList.add(0, lastElement);

                modifyListNumbers(numbersList, copyFirstElement);

            } else if (index > numbersList.size() - 1) {
                int copyLastElement = numbersList.get(numbersList.size() - 1);
                sumRemoved += copyLastElement;
                numbersList.remove(numbersList.size() - 1);

                int copyFirstElement = numbersList.get(0);
                numbersList.add(copyFirstElement);

                modifyListNumbers(numbersList, copyLastElement);
            }
        }
        System.out.println(sumRemoved);
    }

    public static void modifyListNumbers(List<Integer> numbersList, int removedElement) {
        for (int i = 0; i < numbersList.size(); i++) {
            int currentNum = numbersList.get(i);

            if (currentNum <= removedElement) {
                currentNum += removedElement;
            } else {
                currentNum -= removedElement;
            }
            numbersList.set(i, currentNum);
        }

    }
}
